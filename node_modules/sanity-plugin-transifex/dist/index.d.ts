import {Adapter} from 'sanity-translations-tab'
import {BaseDocumentDeserializer} from 'sanity-translations-tab'
import {BaseDocumentMerger} from 'sanity-translations-tab'
import {BaseDocumentSerializer} from 'sanity-translations-tab'
import {customSerializers} from 'sanity-translations-tab'
import {defaultStopTypes} from 'sanity-translations-tab'
import {documentLevelPatch} from 'sanity-translations-tab'
import {fieldLevelPatch} from 'sanity-translations-tab'
import {findLatestDraft} from 'sanity-translations-tab'
import {legacyDocumentLevelPatch} from 'sanity-translations-tab'
import {TranslationFunctionContext} from 'sanity-translations-tab'
import {TranslationsTab} from 'sanity-translations-tab'

export {BaseDocumentDeserializer}

export {BaseDocumentMerger}

export {BaseDocumentSerializer}

declare interface ConfigOptions {
  adapter: Adapter
  secretsNamespace: string | null
  exportForTranslation: (
    id: string,
    context: TranslationFunctionContext
  ) => Promise<Record<string, any>>
  importTranslation: (
    id: string,
    localeId: string,
    doc: string,
    context: TranslationFunctionContext
  ) => Promise<void>
}

export {customSerializers}

export declare const defaultDocumentLevelConfig: ConfigOptions

export declare const defaultFieldLevelConfig: ConfigOptions

export {defaultStopTypes}

export {documentLevelPatch}

export {fieldLevelPatch}

export {findLatestDraft}

export declare const legacyDocumentLevelConfig: ConfigOptions

export {legacyDocumentLevelPatch}

export declare const TransifexAdapter: Adapter

export {TranslationsTab}

export {}
