/// <reference types="react" />

import type {FieldMember} from 'sanity'
import type {FieldsetState} from 'sanity'
import type {ObjectSchemaType} from 'sanity'
import {Plugin as Plugin_2} from 'sanity'
import type {SanityClient} from 'sanity'
import type {SchemaType} from 'sanity'

export declare const defaultFilterField: FilterFieldFunction

export declare type FilterFieldFunction = (
  enclosingType: ObjectSchemaType,
  field: FieldMember | FieldsetState,
  selectedLanguageIds: string[],
) => boolean

export declare function isLanguageFilterEnabled(
  schemaType: SchemaType | undefined,
  options: LanguageFilterConfig,
): boolean

export declare type Language = {
  id: Intl.UnicodeBCP47LocaleIdentifier
  title: string
}

declare type LanguageCallback = (
  client: SanityClient,
  selectedValue: Record<string, unknown>,
) => Promise<Language[]>

/**
 * ## Usage in sanity.config.ts (or .js)
 *
 * ```
 * import {defineConfig} from 'sanity'
 * import {languageFilter} from '@sanity/language-filter'
 *
 * export const defineConfig({
 *     /...
 *     plugins: [
 *         languageFilter({
 *             supportedLanguages: [
 *               {id: 'nb', title: 'Norwegian (Bokmål)'},
 *               {id: 'nn', title: 'Norwegian (Nynorsk)'},
 *               {id: 'en', title: 'English'},
 *               {id: 'es', title: 'Spanish'},
 *               {id: 'arb', title: 'Arabic'},
 *               {id: 'pt', title: 'Portuguese'},
 *               //...
 *             ],
 *             // Select Norwegian (Bokmål) by default
 *             defaultLanguages: ['nb'],
 *             // Only show language filter for document type `page` (schemaType.name)
 *             // Can also enable via document-options: options.languageFilter: true
 *             documentTypes: ['page'],
 *             // default filter function shown
 *             filterField: (enclosingType, field, selectedLanguageIds) =>
 *               !enclosingType.name.startsWith('locale') || selectedLanguageIds.includes(field.name),
 *        })
 *    ]
 * })
 * ```
 */
export declare const languageFilter: Plugin_2<LanguageFilterConfig>

export declare interface LanguageFilterConfig {
  supportedLanguages: Language[] | LanguageCallback
  defaultLanguages?: string[]
  documentTypes?: string[]
  filterField?: FilterFieldFunction
  /**
   * https://www.sanity.io/docs/api-versioning
   * @defaultValue '2022-11-27'
   */
  apiVersion?: string
}

declare interface LanguageFilterConfigProcessed extends LanguageFilterConfig {
  supportedLanguages: Language[]
}

export declare interface LanguageFilterOptions {
  languageFilter?: boolean
}

export declare interface LanguageFilterSchema extends ObjectSchemaType {
  options?: LanguageFilterOptions
}

declare interface LanguageFilterStudioContextProcessed {
  options: Required<LanguageFilterConfigProcessed>
}

declare interface LanguageFilterStudioContextValue extends LanguageFilterStudioContextProcessed {
  selectedLanguageIds: string[]
  setSelectedLanguageIds: (ids: string[]) => void
}

/**
 * Retrieves plugin options and the currently selected
 * language IDs from anywhere in the Studio
 */
export declare function useLanguageFilterStudioContext(): LanguageFilterStudioContextValue

export {}
